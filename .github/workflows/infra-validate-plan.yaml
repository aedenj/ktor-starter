name: Infra - Validate & Plan

on:
  workflow_dispatch: # enables manual execution
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '.github/**'
      - 'README.md'
      - 'LICENSE'
      - 'CONTRIBUTING.md'
      - '.tool-versions'
      - '.gitignore'
      - 'Makefile'
      - '**/docs/**'

concurrency: # set other jobs with the same 'group' in a queue
  group: ktor-starter
  cancel-in-progress: false

permissions:
  id-token: write # allow creation of openid connect token
  contents: read  # allow read repository's content by steps
  pull-requests: write  # Required for writing comments

env:
  tg_version: '0.86.2'
  working_dir: 'deploy/aws/'
  TF_IN_AUTOMATION: 'true'
  TF_INPUT: 'false'
  TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform.d/plugin-cache

jobs:
  validate:
    name: Infra - Validate & Plan
    runs-on: ubuntu-latest
    timeout-minutes: 30 # avoid using gitHub runners time
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: true
      matrix:
        infra_env: [dev]
        region: [us-east-1]

    environment: ${{ matrix.infra_env }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Create Terraform Plugin Cache Dir
        run: mkdir -p $TF_PLUGIN_CACHE_DIR

      - name: Terraform Plugin Cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-plugin-cache-${{ hashFiles('**/.terraform.lock.hcl') }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: '1.13.1'
          terraform_wrapper: false

      - name: Expose Terraform Path
        run: echo "TERRAFORM_BIN=$(command -v terraform)" >> "$GITHUB_ENV"

      - name: Lint
        if: ${{ always() }}
        id: lint
        uses: gruntwork-io/terragrunt-action@95fc057922e3c3d4cc021a81a213f088f333ddef # v3.0.2
        with:
          tf_path: ${{ env.TERRAFORM_BIN }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: |
            hcl format --check --diff

      - name: Assert AWS role ARN is present
        if: ${{ github.event.pull_request.head.repo.fork == false }}
        run: |
          if [ -z "${{ secrets.AWS_ROLE_ARN }}" ]; then
            echo "::error::AWS_ROLE_ARN secret is missing or not accessible in this context."
            exit 1
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          aws-region: ${{ matrix.region }}
          role-session-name: github-actions-oidc-session
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: Init
        uses: gruntwork-io/terragrunt-action@95fc057922e3c3d4cc021a81a213f088f333ddef # v3.0.2
        with:
          tf_path: ${{ env.TERRAFORM_BIN }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: |
            run --all init --non-interactive
        env:
          DEPLOYMENT: ${{ matrix.infra_env }}-${{ matrix.region }}
          TF_PLUGIN_CACHE_DIR: ${{ env.TF_PLUGIN_CACHE_DIR }}

      - name: Validate
        id: validate
        uses: gruntwork-io/terragrunt-action@95fc057922e3c3d4cc021a81a213f088f333ddef # v3.0.2
        with:
          tf_path: ${{ env.TERRAFORM_BIN }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: |
            run --all validate --non-interactive
        env:
          DEPLOYMENT: ${{ matrix.infra_env }}-${{ matrix.region }}
          TF_PLUGIN_CACHE_DIR: ${{ env.TF_PLUGIN_CACHE_DIR }}

      - name: Plan
        id: plan
        uses: gruntwork-io/terragrunt-action@95fc057922e3c3d4cc021a81a213f088f333ddef # v3.0.2
        with:
          tf_path: ${{ env.TERRAFORM_BIN }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: | 
            run --all plan --non-interactive -- -out=plan.tfplan
        env:
          DEPLOYMENT: ${{ matrix.infra_env }}-${{ matrix.region }}
          TF_PLUGIN_CACHE_DIR: ${{ env.TF_PLUGIN_CACHE_DIR }}
          TF_VAR_kube_data_auth_enabled: true

      - name: Upload Terraform Plans
        if: ${{ success() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: terragrunt-plans-${{ matrix.infra_env }}-${{ matrix.region }}
          path: |
            deploy/aws/**/plan.tfplan
            deploy/aws/**/.terragrunt-cache/**/plan.tfplan
          if-no-files-found: ignore